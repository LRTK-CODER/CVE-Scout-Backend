from flask import request, jsonify
from flask_restx import Namespace, Resource


def count(mongo_client):
    api = Namespace("count", description="CVE 관련 정보의 개수 출력 API")

    @api.route("/all")
    class CveAllCount(Resource):
        @api.doc(
            responses={200: "Success"}, 
            description="MongoDB에 저장된 모든 CVE의 개수 출력",
        )
        def get(self):
            cve_collection = mongo_client["CVE-Scout"]["CVE_INFO"]
            cve_count = cve_collection.count_documents({})

            return {"count": cve_count}

    @api.route("/year-all")
    class CveYearlyCount(Resource):
        @api.doc(responses={200: "Success"}, description="각 연도별 CVE 개수 출력")
        def get(self):
            cve_collection = mongo_client["CVE-Scout"]["CVE_INFO"]
            pipeline = [
                {"$project": {"year": {"$substr": ["$cve.id", 4, 4]}}},
                {"$group": {"_id": "$year", "count": {"$sum": 1}}},
            ]
            year_counts = {
                doc["_id"]: doc["count"] for doc in cve_collection.aggregate(pipeline)
            }

            return year_counts

    @api.route("/<int:year>")
    class CveYearCount(Resource):
        @api.doc(
            params={"year": "Year of the CVE"},
            responses={200: "Success"},
            description="MongoDB에 저장된 특정 연도의 CVE 개수 출력",
        )
        def get(self, year):
            cve_collection = mongo_client["CVE-Scout"]["CVE_INFO"]
            cve_count = cve_collection.count_documents(
                {"cve.id": {"$regex": f"CVE-{year}-"}}
            )

            return {"count": cve_count}

    return api