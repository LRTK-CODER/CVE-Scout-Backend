import os
import json
import pytz
import requests
import time
from datetime import datetime, timedelta
from typing import Optional, Dict, Any, List


class NVD_CVE_Parser:
    def __init__(self, api_url: str, api_key: str):
        self.api_url = api_url
        self.headers = {"apiKey": api_key}
        self.seoul_tz = pytz.timezone("Asia/Seoul")

    def _get_response(self, url: str, retry_count: int = 3) -> Optional[Dict[str, Any]]:
        if retry_count < 1:
            print("요청 재시도 횟수를 초과했습니다.")
            return None

        response = requests.get(url, headers=self.headers)

        if response.status_code == 403:
            print("API 요청이 너무 빠릅니다. 잠시 후 다시 시도합니다.")
            time.sleep(6)
            return self._get_response(url, retry_count - 1)  # 6초 후에 재시도

        elif response.status_code != 200:
            print(f"API 요청에 실패했습니다. 상태 코드: {response.status_code}")
            print(response.text)
            return None

        return response.json()
    
    def fetch_cve_data(self, start_index: int, results_per_page: int) -> Optional[List[Dict[str, Any]]]:
        url = f"{self.api_url}/?resultsPerPage={results_per_page}&startIndex={start_index}"
        response_json = self._get_response(url)

        if response_json is None:
            return None

        cve_data = response_json["vulnerabilities"]

        return cve_data
